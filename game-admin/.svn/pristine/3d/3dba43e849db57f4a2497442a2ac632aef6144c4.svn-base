package com.game.admin.controllers;

import java.util.List;

import net.paoding.rose.web.annotation.Param;

import org.springframework.beans.factory.annotation.Autowired;

import com.caucho.hessian.client.HessianProxyFactory;
import com.game.admin.pojo.Life;
import com.game.admin.service.life.ILifeService;
import com.game.admin.utils.OperateLogInfos;
import com.game.admin.utils.ResultCode;
import com.game.api.hessian.HeroService;
import com.game.util.ObjectUtil;

/**
 * 命格物品
 * @author jiayi
 *
 */
public class LifeController extends BaseController{
	
	@Autowired
	private ILifeService lifeService;	
	
	public Object getAllLifeData(@Param("q") String q){
		List<Life> lifeDatas = lifeService.getAllLife();
		return ResultCode.writeJson(lifeDatas);
	}
	
	public Object sendLifeGoods(@Param("serverId") int serverId,@Param("heroId") String heroId
								,@Param("lifeGood") String lifeGood,@Param("lifeChipnum") int lifeChipnum){
		String url = buildUrl(serverId, "/game-server/api/service/accounthero");
		HessianProxyFactory factory = new HessianProxyFactory();
		factory.setOverloadEnabled(true);
		{
			try {
				HeroService heroService = (HeroService) factory.create(HeroService.class, url);
				if(ObjectUtil.isEmptyObject(heroService)){
					logger.	error("查找玩家账号时，heroService为空");
					return ResultCode.error(String.format("查找%d服玩家账失败", serverId));
				}else {
					int result = heroService.sendLifeGoods(heroId,lifeGood,lifeChipnum);
					if(result == 1){
						logger.error(String.format("发送命格物品失败，玩家【%s】不存在", heroId));
						recordOperateLog(String.format(OperateLogInfos.LifeControllerSendLifeGoods,heroId,lifeGood,lifeChipnum
								,getSessionInfo().getIp(),getByIdServerName(serverId)), 2);
						return ResultCode.error(String.format("发送命格物品失败,玩家【%s】不存在", heroId));
					} else if (result == 2) {
						return ResultCode.error(String.format("发送命格物品失败,命格未解锁", heroId));
					}
					recordOperateLog(String.format(OperateLogInfos.LifeControllerSendLifeGoods,heroId,lifeGood,lifeChipnum
							,getSessionInfo().getIp(),getByIdServerName(serverId)), 1);
					return ResultCode.succ("发送命格物品成功");
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		return ResultCode.error("发送失败");
	}
}
