package com.game.admin.pojo.task;

import java.io.Serializable;
import java.util.List;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

/**
 *
 * Generated by the rapid-generator.  DO NOT EDIT!!!
 * 
 * @author zhangyaping email:yapingzhang_beta@163.com
 * @version 1.0, 2014年12月04日
 *
 */
public class TaskConditionData implements Serializable {
	private static final long serialVersionUID = 5454155825314635342L;

	//columns START
	/**
	 * 序号       db_column: F_id 第1个
	 */
	private java.lang.Integer id;
	/**
	 * 任务编号       db_column: F_task_id 第2个
	 */
	private java.lang.Integer taskId;
	/**
	 * 任务难度级别       db_column: f_difficulty_level 第3个
	 */
	private java.lang.Integer difficultyLevel;
	/**
	 * 职业限制
	 */
	private java.lang.Integer job;
	/**
	 * 任务目标类型(0杀怪;1收集物品2;商城购买;3npc对话,4穿戴装备,5完成某动作,6升级等级,7通关某副本)       db_column: f_target_type 第7个
	 */
	private java.lang.Integer targetType;
	/**
	 * 任务目标：杀怪，格式：{副本id:怪模型ID:数量}*，多个以逗号分隔       db_column: f_target_kill_monster 第8个
	 */
	private java.lang.String targetKillMonster;
	/**
	 * 任务目标：搜集物品，格式：{包裹类型:道具ID:道具数量:过期时间}*，多个以逗号分隔，包裹中是否拥有某件道具       db_column: f_target_goods 第9个
	 */
	private java.lang.String targetGoods;
	/**
	 * 任务目标：判断玩家是否从商城中购买过某个物品，格式：{包裹类型:道具ID:道具数量:过期时间}*，多个以逗号分隔       db_column: f_target_shop 第10个
	 */
	private java.lang.String targetShop;
	/**
	 * 任务目标：寻访npc/是否与指定（多个）NPC对话，格式：{npcID}*，多个以 逗号分隔       db_column: f_target_talk_npc 第11个
	 */
	private java.lang.String targetTalkNpc;
	/**
	 * 任务目标：身上指定部位是否有穿戴装备，格式：装备位置       db_column: f_target_need_equip 第12个
	 */
	private java.lang.String targetNeedEquip;
	/**
	 * 任务目标：动作触发（1使用恢复类道具2装备合成3宝石合成4宝石镶嵌5买入道具6卖出道具)       db_column: f_target_action 第13个
	 */
	private java.lang.String targetAction;
	/**
	 * 任务目标：升级等级（当所有职业中最大等级满足时）       db_column: f_target_min_grade 第14个
	 */
	private java.lang.Integer targetMinGrade;
	/**
	 * 任务目标：通关副本id       db_column: f_target_instance_id 第15个
	 */
	private java.lang.Integer targetInstanceId;
	/**
	 * 接任务后获得指定ID的BUFF       db_column: f_give_buff_id 第16个
	 */
	private java.lang.Integer giveBuffId;
	/**
	 * 接任务后获得道具。格式： {职业id*道具ID*道具数量*包裹类型*过期时间}*，多个以分号分隔       db_column: f_give_goods 第17个
	 */
	private java.lang.String giveGoods;
	/**
	 * 接受任务后将会取走玩家包裹中的铜钱       db_column: f_take_copper 第18个
	 */
	private java.lang.Integer takeCopper;
	/**
	 * 接任务后，传送至指定地图指定坐标。格式：场景id_x_y_距离       db_column: f_trans 第19个
	 */
	private java.lang.String trans;
	/**
	 * 任务目标描述       db_column: F_target_desc 第20个
	 */
	private java.lang.String targetDesc;
	/**
	 * 入口id       db_column: F_entrance_id 第21个
	 */
	private java.lang.Integer entranceId;
	/**
	 * 入口关卡       db_column: F_instance 第22个
	 */
	private java.lang.Integer instance;

	//columns END

	public TaskConditionData() {
	}

	public TaskConditionData(java.lang.Integer id) {
		this.id = id;
	}

	/**
	 * 序号 db_column: t_task_condition.F_id
	 */
	public void setId(java.lang.Integer value) {
		this.id = value;
	}

	/**
	 * 序号 db_column: t_task_condition.F_id
	 */
	public java.lang.Integer getId() {
		return this.id;
	}

	/**
	 * 任务编号 db_column: t_task_condition.F_task_id
	 */
	public void setTaskId(java.lang.Integer value) {
		this.taskId = value;
	}

	/**
	 * 任务编号 db_column: t_task_condition.F_task_id
	 */
	public java.lang.Integer getTaskId() {
		return this.taskId;
	}

	/**
	 * 任务难度级别 db_column: t_task_condition.f_difficulty_level
	 */
	public void setDifficultyLevel(java.lang.Integer value) {
		this.difficultyLevel = value;
	}

	/**
	 * 任务难度级别 db_column: t_task_condition.f_difficulty_level
	 */
	public java.lang.Integer getDifficultyLevel() {
		return this.difficultyLevel;
	}

	public java.lang.Integer getJob() {
		return job;
	}

	public void setJob(java.lang.Integer job) {
		this.job = job;
	}

	/**
	 * 任务目标类型(0杀怪;1收集物品2;商城购买;3npc对话,4穿戴装备,5完成某动作,6升级等级,7通关某副本) db_column: t_task_condition.f_target_type
	 */
	public void setTargetType(java.lang.Integer value) {
		this.targetType = value;
	}

	/**
	 * 任务目标类型(0杀怪;1收集物品2;商城购买;3npc对话,4穿戴装备,5完成某动作,6升级等级,7通关某副本) db_column: t_task_condition.f_target_type
	 */
	public java.lang.Integer getTargetType() {
		return this.targetType;
	}

	/**
	 * 任务目标：杀怪，格式：{怪模型ID*数量}*，多个以分号分隔 db_column: t_task_condition.f_target_kill_monster
	 */
	public void setTargetKillMonster(java.lang.String value) {
		this.targetKillMonster = value;
	}

	/**
	 * 任务目标：杀怪，格式：{怪模型ID*数量}*，多个以分号分隔 db_column: t_task_condition.f_target_kill_monster
	 */
	public java.lang.String getTargetKillMonster() {
		return this.targetKillMonster;
	}

	/**
	 * 任务目标：搜集物品，格式：{验证类型*道具ID*道具数量*包裹类型*过期时间}*，多个以分号分隔，其中验证类型（1包裹中是否拥有某件道具；2包裹中是否没有某道具） db_column: t_task_condition.f_target_goods
	 */
	public void setTargetGoods(java.lang.String value) {
		this.targetGoods = value;
	}

	/**
	 * 任务目标：搜集物品，格式：{验证类型*道具ID*道具数量*包裹类型*过期时间}*，多个以分号分隔，其中验证类型（1包裹中是否拥有某件道具；2包裹中是否没有某道具） db_column: t_task_condition.f_target_goods
	 */
	public java.lang.String getTargetGoods() {
		return this.targetGoods;
	}

	/**
	 * 任务目标：判断玩家是否从商城中购买过某个物品，格式：{道具ID*道具数量*包裹类型*过期时间}*，多个以分号分隔 db_column: t_task_condition.f_target_shop
	 */
	public void setTargetShop(java.lang.String value) {
		this.targetShop = value;
	}

	/**
	 * 任务目标：判断玩家是否从商城中购买过某个物品，格式：{道具ID*道具数量*包裹类型*过期时间}*，多个以分号分隔 db_column: t_task_condition.f_target_shop
	 */
	public java.lang.String getTargetShop() {
		return this.targetShop;
	}

	/**
	 * 任务目标：寻访npc/是否与指定（多个）NPC对话，格式：{npcID*场景id}*，多个以分号分隔 db_column: t_task_condition.f_target_talk_npc
	 */
	public void setTargetTalkNpc(java.lang.String value) {
		this.targetTalkNpc = value;
	}

	/**
	 * 任务目标：寻访npc/是否与指定（多个）NPC对话，格式：{npcID*场景id}*，多个以分号分隔 db_column: t_task_condition.f_target_talk_npc
	 */
	public java.lang.String getTargetTalkNpc() {
		return this.targetTalkNpc;
	}

	/**
	 * 任务目标：身上指定部位是否有穿戴装备，格式：装备位置 db_column: t_task_condition.f_target_need_equip
	 */
	public void setTargetNeedEquip(java.lang.String value) {
		this.targetNeedEquip = value;
	}

	/**
	 * 任务目标：身上指定部位是否有穿戴装备，格式：装备位置 db_column: t_task_condition.f_target_need_equip
	 */
	public java.lang.String getTargetNeedEquip() {
		return this.targetNeedEquip;
	}

	/**
	 * 任务目标：动作触发 多个动作以,分割  （1组队，2添加好友3装备物品 4使用恢复类道具 5道具合成 6宝石镶嵌 7买入道具 8卖出道具) db_column: t_task_condition.f_target_action
	 */
	public void setTargetAction(java.lang.String value) {
		this.targetAction = value;
	}

	/**
	 * 任务目标：动作触发 多个动作以,分割  （1组队，2添加好友3装备物品 4使用恢复类道具 5道具合成 6宝石镶嵌 7买入道具 8卖出道具) db_column: t_task_condition.f_target_action
	 */
	public java.lang.String getTargetAction() {
		return this.targetAction;
	}

	/**
	 * 任务目标：升级等级 db_column: t_task_condition.f_target_min_grade
	 */
	public void setTargetMinGrade(java.lang.Integer value) {
		this.targetMinGrade = value;
	}

	/**
	 * 任务目标：升级等级 db_column: t_task_condition.f_target_min_grade
	 */
	public java.lang.Integer getTargetMinGrade() {
		return this.targetMinGrade;
	}

	/**
	 * 任务目标：通关副本id db_column: t_task_condition.f_target_instance_id
	 */
	public void setTargetInstanceId(java.lang.Integer value) {
		this.targetInstanceId = value;
	}

	/**
	 * 任务目标：通关副本id db_column: t_task_condition.f_target_instance_id
	 */
	public java.lang.Integer getTargetInstanceId() {
		return this.targetInstanceId;
	}

	/**
	 * 接任务后获得指定ID的BUFF db_column: t_task_condition.f_give_buff_id
	 */
	public void setGiveBuffId(java.lang.Integer value) {
		this.giveBuffId = value;
	}

	/**
	 * 接任务后获得指定ID的BUFF db_column: t_task_condition.f_give_buff_id
	 */
	public java.lang.Integer getGiveBuffId() {
		return this.giveBuffId;
	}

	/**
	 * 接任务后获得道具。格式： {职业id*道具ID*道具数量*包裹类型*过期时间}*，多个以分号分隔 db_column: t_task_condition.f_give_goods
	 */
	public void setGiveGoods(java.lang.String value) {
		this.giveGoods = value;
	}

	/**
	 * 接任务后获得道具。格式： {职业id*道具ID*道具数量*包裹类型*过期时间}*，多个以分号分隔 db_column: t_task_condition.f_give_goods
	 */
	public java.lang.String getGiveGoods() {
		return this.giveGoods;
	}

	/**
	 * 接受任务后将会取走玩家包裹中的铜钱 db_column: t_task_condition.f_take_copper
	 */
	public void setTakeCopper(java.lang.Integer value) {
		this.takeCopper = value;
	}

	/**
	 * 接受任务后将会取走玩家包裹中的铜钱 db_column: t_task_condition.f_take_copper
	 */
	public java.lang.Integer getTakeCopper() {
		return this.takeCopper;
	}

	/**
	 * 接任务后，传送至指定地图指定坐标。格式：场景id_x_y_距离 db_column: t_task_condition.f_trans
	 */
	public void setTrans(java.lang.String value) {
		this.trans = value;
	}

	/**
	 * 接任务后，传送至指定地图指定坐标。格式：场景id_x_y_距离 db_column: t_task_condition.f_trans
	 */
	public java.lang.String getTrans() {
		return this.trans;
	}

	/**
	 * 任务目标描述 db_column: t_task_condition.F_target_desc
	 */
	public void setTargetDesc(java.lang.String value) {
		this.targetDesc = value;
	}

	/**
	 * 任务目标描述 db_column: t_task_condition.F_target_desc
	 */
	public java.lang.String getTargetDesc() {
		return this.targetDesc;
	}

	@Override
	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}

	@Override
	public int hashCode() {
		return new HashCodeBuilder().append(getId()).toHashCode();
	}

	@Override
	public boolean equals(Object obj) {
		if (obj instanceof TaskConditionData == false) {
			return false;
		}
		if (this == obj) {
			return true;
		}
		TaskConditionData other = (TaskConditionData) obj;
		return new EqualsBuilder().append(getId(), other.getId()).isEquals();
	}

	private List<String> targetKillMonsterValues;
	private List<String> targetGoodsValues;
	private List<String> targetShopValues;
	private List<String> targetTalkNpcValues;

	private List<String> targetKillMonsterTexts;
	private List<String> targetGoodsTexts;
	private List<String> targetShopTexts;
	private List<String> targetTalkNpcTexts;

	public List<String> getTargetKillMonsterValues() {
		return targetKillMonsterValues;
	}

	public void setTargetKillMonsterValues(List<String> targetKillMonsterValues) {
		this.targetKillMonsterValues = targetKillMonsterValues;
	}

	public List<String> getTargetGoodsValues() {
		return targetGoodsValues;
	}

	public void setTargetGoodsValues(List<String> targetGoodsValues) {
		this.targetGoodsValues = targetGoodsValues;
	}

	public List<String> getTargetShopValues() {
		return targetShopValues;
	}

	public void setTargetShopValues(List<String> targetShopValues) {
		this.targetShopValues = targetShopValues;
	}

	public List<String> getTargetTalkNpcValues() {
		return targetTalkNpcValues;
	}

	public void setTargetTalkNpcValues(List<String> targetTalkNpcValues) {
		this.targetTalkNpcValues = targetTalkNpcValues;
	}

	public List<String> getTargetKillMonsterTexts() {
		return targetKillMonsterTexts;
	}

	public void setTargetKillMonsterTexts(List<String> targetKillMonsterTexts) {
		this.targetKillMonsterTexts = targetKillMonsterTexts;
	}

	public List<String> getTargetGoodsTexts() {
		return targetGoodsTexts;
	}

	public void setTargetGoodsTexts(List<String> targetGoodsTexts) {
		this.targetGoodsTexts = targetGoodsTexts;
	}

	public List<String> getTargetShopTexts() {
		return targetShopTexts;
	}

	public void setTargetShopTexts(List<String> targetShopTexts) {
		this.targetShopTexts = targetShopTexts;
	}

	public List<String> getTargetTalkNpcTexts() {
		return targetTalkNpcTexts;
	}

	public void setTargetTalkNpcTexts(List<String> targetTalkNpcTexts) {
		this.targetTalkNpcTexts = targetTalkNpcTexts;
	}

	public java.lang.Integer getEntranceId() {
		return entranceId;
	}

	public void setEntranceId(java.lang.Integer entranceId) {
		this.entranceId = entranceId;
	}

	public java.lang.Integer getInstance() {
		return instance;
	}

	public void setInstance(java.lang.Integer instance) {
		this.instance = instance;
	}

}
